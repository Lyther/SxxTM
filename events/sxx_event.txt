namespace = sxx_event

# on_game_start
event = {
	id = sxx_event.1

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		random_country = {
			limit = {
				is_sxx_sect = yes
				is_ai = no
			}
			country_event = { id = sxx_event.2 days = 3 }
			country_event = { id = sxx_event.2000 days = 5 }
		}

		every_country = {
			limit = {
				OR = {
					is_country_type = default
					is_country_type = fallen_empire
					is_country_type = awakened_fallen_empire
				}
				is_sxx_sect = no
			}
			capital_scope = {
				if = {
					limit = {
						is_artificial = no
						NOR = {
							is_planet_class = pc_city
							is_planet_class = pc_machine
						}
					}
					add_deposit = d_sxx_lingmai_1
				}
			}
		}

		random_system = {
			limit = {
				is_rim_system = no
			}
			spawn_system = {
				min_distance = 20
				max_distance = 30
				max_jumps = 0
				initializer = "sxx_ancient_forbidden_area"
			}
			last_created_system = {
				isolate_system = yes
			}
		}

		random_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
			}
			set_star_flag = sxx_precursor_1
			save_event_target_as = sxx_target_system_1
		}
		random_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_1
					min_distance >= 100
				}
			}
			set_star_flag = sxx_precursor_2
			save_event_target_as = sxx_target_system_2
		}
		random_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_2
					min_distance >= 100
				}
			}
			set_star_flag = sxx_precursor_3
			save_event_target_as = sxx_target_system_3
		}
		random_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_3
					min_distance >= 100
				}
			}
			set_star_flag = sxx_precursor_4
			save_event_target_as = sxx_target_system_4
		}
		random_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_4
					min_distance >= 100
				}
			}
			set_star_flag = sxx_precursor_5
			save_event_target_as = sxx_target_system_5
		}
		every_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_1
					max_distance <= 500
				}
			}
			set_star_flag = sxx_precursor_1
		}
		every_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_2
					max_distance <= 500
				}
			}
			set_star_flag = sxx_precursor_2
		}
		every_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_3
					max_distance <= 500
				}
			}
			set_star_flag = sxx_precursor_3
		}
		every_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_4
					max_distance <= 500
				}
			}
			set_star_flag = sxx_precursor_4
		}
		every_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				distance = {
					source = event_target:sxx_target_system_5
					max_distance <= 500
				}
			}
			set_star_flag = sxx_precursor_5
		}
		every_system = {
			limit = {
				NOT = { has_star_flag = sxx_forbidden_area }
				NOR = {
					has_star_flag = sxx_precursor_1
					has_star_flag = sxx_precursor_2
					has_star_flag = sxx_precursor_3
					has_star_flag = sxx_precursor_4
					has_star_flag = sxx_precursor_5
				}
			}
			set_star_flag = sxx_precursor_1
			set_star_flag = sxx_precursor_2
			set_star_flag = sxx_precursor_3
			set_star_flag = sxx_precursor_4
			set_star_flag = sxx_precursor_5
		}

		create_country = {
			name = "NAME_SXX_System"
			type = sxx_system
			flag = {
				icon= {
					category = "blocky"
					file = "flag_blocky_3.dds"
				}
				background= {
					category = "backgrounds"
					file = "vertical.dds"
				}
				colors={
					"white"
					"black"
					"null"
					"null"
				}
			}
		}
		last_created_country = {
			save_global_event_target_as = sxx_system_country
		}
	}
}

# 修炼难度设置
country_event = {
	id = sxx_event.2
	title = sxx_event.2.name
	desc = sxx_event.2.desc
	is_triggered_only = yes
	picture = GFX_evt_sxx_blessed_spot

	trigger = {
		is_ai = no
	}

	after = {
		hidden_effect = {
			# 难度选择后重置初始经验
			every_country = {
				limit = {
					is_sxx_sect = yes
					is_sxx_fallen_1 = no
				}
				every_owned_pop = {
					limit = {
						is_variable_set = sxx_pop_state
					}
					if = {
						limit = {
							is_sxx_top_1_state = yes
						}
						set_variable = { which = sxx_pop_xp value = value:sxx_pop_xp_max }
						random_list = {
							1 = { multiply_variable = { which = sxx_pop_xp value = 0.3 } }
							2 = { multiply_variable = { which = sxx_pop_xp value = 0.2 } }
							4 = { multiply_variable = { which = sxx_pop_xp value = 0.1 } }
							8 = { multiply_variable = { which = sxx_pop_xp value = 0 } }
						}
					}
					else = {
						set_variable = { which = sxx_pop_xp value = value:sxx_pop_xp_max }
						random_list = {
							1 = {}
							2 = { multiply_variable = { which = sxx_pop_xp value = 0.9 } }
							3 = { multiply_variable = { which = sxx_pop_xp value = 0.8 } }
							4 = { multiply_variable = { which = sxx_pop_xp value = 0.7 } }
							5 = { multiply_variable = { which = sxx_pop_xp value = 0.6 } }
							6 = { multiply_variable = { which = sxx_pop_xp value = 0.5 } }
							7 = { multiply_variable = { which = sxx_pop_xp value = 0.4 } }
							8 = { multiply_variable = { which = sxx_pop_xp value = 0.3 } }
							9 = { multiply_variable = { which = sxx_pop_xp value = 0.2 } }
							10 = { multiply_variable = { which = sxx_pop_xp value = 0.1 } }
							11 = { multiply_variable = { which = sxx_pop_xp value = 0 } }
						}
					}
				}
			}
			every_country = {
				limit = {
					is_sxx_fallen_1 = yes
				}
				every_owned_pop = {
					limit = {
						is_variable_set = sxx_pop_state
					}
					if = {
						limit = {
							is_sxx_top_1_state = no
						}
						set_variable = { which = sxx_pop_xp value = value:sxx_pop_xp_max }
						random_list = {
							1 = {}
							2 = { multiply_variable = { which = sxx_pop_xp value = 0.9 } }
							3 = { multiply_variable = { which = sxx_pop_xp value = 0.8 } }
							4 = { multiply_variable = { which = sxx_pop_xp value = 0.7 } }
							5 = { multiply_variable = { which = sxx_pop_xp value = 0.6 } }
							6 = { multiply_variable = { which = sxx_pop_xp value = 0.5 } }
							7 = { multiply_variable = { which = sxx_pop_xp value = 0.4 } }
							8 = { multiply_variable = { which = sxx_pop_xp value = 0.3 } }
							9 = { multiply_variable = { which = sxx_pop_xp value = 0.2 } }
							10 = { multiply_variable = { which = sxx_pop_xp value = 0.1 } }
							11 = { multiply_variable = { which = sxx_pop_xp value = 0 } }
						}
					}
				}
			}

			country_event = { id = sxx_crisis.1 }
		}
	}

	option = {
		name = sxx_event.2.a
		set_global_flag = sxx_break_level_1
		remove_global_flag = sxx_break_level_2
		remove_global_flag = sxx_break_level_3
		remove_global_flag = sxx_break_level_4
	}
	option = {
		name = sxx_event.2.b
		set_global_flag = sxx_break_level_2
		remove_global_flag = sxx_break_level_1
		remove_global_flag = sxx_break_level_3
		remove_global_flag = sxx_break_level_4
		ai_chance = {
			factor = 100
		}
	}
	option = {
		name = sxx_event.2.c
		set_global_flag = sxx_break_level_3
		remove_global_flag = sxx_break_level_1
		remove_global_flag = sxx_break_level_2
		remove_global_flag = sxx_break_level_4
	}
	option = {
		name = sxx_event.2.d
		set_global_flag = sxx_break_level_4
		remove_global_flag = sxx_break_level_1
		remove_global_flag = sxx_break_level_2
		remove_global_flag = sxx_break_level_3
	}
}

# 每年根据 pop flag 纠正人口境界，校对特质
event = {
	id = sxx_event.5
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		every_galaxy_pop = {
			switch = {
				trigger = has_pop_flag
				sxx_lianqi = {
					if = {
						limit = {
							OR = {
								NOT = { has_trait = trait_sxx_lianqi }
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_lianqi
						}
					}
				}
				sxx_zhuji = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								NOT = { has_trait = trait_sxx_zhuji }
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_zhuji
						}
					}
				}
				sxx_jindan = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								NOT = { has_trait = trait_sxx_jindan }
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_jindan
						}
					}
				}
				sxx_yuanying = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								NOT = { has_trait = trait_sxx_yuanying }
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_yuanying
						}
					}
				}
				sxx_huashen = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								NOT = { has_trait = trait_sxx_huashen }
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_huashen
						}
					}
				}
				sxx_lianxu = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								NOT = { has_trait = trait_sxx_lianxu }
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_lianxu
						}
					}
				}
				sxx_heti = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								NOT = { has_trait = trait_sxx_heti }
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_heti
						}
					}
				}
				sxx_dacheng = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								NOT = { has_trait = trait_sxx_dacheng }
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_dacheng
						}
					}
				}
				sxx_dujie = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								NOT = { has_trait = trait_sxx_dujie }
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_dujie
						}
					}
				}
				sxx_zhenxian = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								NOT = { has_trait = trait_sxx_zhenxian }
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_zhenxian
						}
					}
				}
				sxx_xianwang = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								NOT = { has_trait = trait_sxx_xianwang }
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_xianwang
						}
					}
				}
				sxx_xiandi = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								NOT = { has_trait = trait_sxx_xiandi }
							}
						}
						sxx_remove_xiuxian_trait = yes
						modify_species = {
							species = this
							add_trait = trait_sxx_xiandi
						}
					}
				}
				default = {
					if = {
						limit = {
							OR = {
								has_trait = trait_sxx_lianqi
								has_trait = trait_sxx_zhuji
								has_trait = trait_sxx_jindan
								has_trait = trait_sxx_yuanying
								has_trait = trait_sxx_huashen
								has_trait = trait_sxx_lianxu
								has_trait = trait_sxx_heti
								has_trait = trait_sxx_dacheng
								has_trait = trait_sxx_dujie
								has_trait = trait_sxx_zhenxian
								has_trait = trait_sxx_xianwang
								has_trait = trait_sxx_xiandi
							}
						}
						sxx_remove_xiuxian_trait = yes
					}
				}
			}

			if = {
				limit = {
					has_trait = trait_mechanical
				}
				if = {
					limit = {
						is_variable_set = sxx_pop_state
						NOT = { has_trait = trait_sxx_kuilei }
					}
					modify_species = {
						species = this
						add_trait = trait_sxx_kuilei
					}
				}
				else_if = {
					limit = {
						NOT = { is_variable_set = sxx_pop_state }
						has_trait = trait_sxx_kuilei
					}
					modify_species = {
						species = this
						remove_trait = trait_sxx_kuilei
					}
				}
			}
			if = {
				limit = {
					NOT = { is_variable_set = sxx_pop_state }
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_linggen
				}
			}
		}
	}
}

# 每年修正羽化仙公民权
country_event = {
	id = sxx_event.6
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_origin = origin_sxx_yuhua
	}

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = event_target:sxx_yuhua_species_of@root
			}
			set_citizenship_type = {
				type = citizenship_sxx_yuhua
				cooldown = yes
			}
		}
	}
}

# 新增人口去除特质 & 添加傀儡特质
planet_event = {
	id = sxx_event.20

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		fromfrom = {
			sxx_remove_xiuxian_trait = yes

			if = {
				limit = {
					has_trait = trait_sxx_potential_depletion
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_potential_depletion
				}
			}
			if = {
				limit = {
					has_trait = trait_sxx_template
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_template
				}
			}
			if = {
				limit = {
					has_trait = trait_sxx_kuilei
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_kuilei
				}
			}
			if = {
				limit = {
					has_trait = trait_sxx_linggen
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_linggen
				}
			}
		}
	}
}

# 殖民人口去除特质
planet_event = {
	id = sxx_event.21

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		every_owned_pop = {
			pop_sxx_remove_xiuxian_flag_and_trait = yes

			if = {
				limit = {
					has_trait = trait_sxx_potential_depletion
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_potential_depletion
				}
			}
			if = {
				limit = {
					has_trait = trait_sxx_template
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_template
				}
			}
			if = {
				limit = {
					has_trait = trait_sxx_kuilei
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_kuilei
				}
			}
			if = {
				limit = {
					has_trait = trait_sxx_linggen
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_linggen
				}
			}
		}
	}
}

# 羽化仙殖民船删除
ship_event = {
	id = sxx_event.25

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_ship_class = shipclass_colonizer
		species = {
			has_trait = trait_sxx_yuhua
		}
	}

	immediate = {
		delete_ship = this
	}
}

# 轨道轰炸创建陆军
fleet_event = {
	id = sxx_event.30

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			is_scope_type = planet
			has_orbital_bombardment_stance = sxx_ground_army
		}
		any_owned_ship = {
			is_ship_size = sxx_cultivator
		}
	}

	immediate = {
		every_owned_ship = {
			limit = {
				is_ship_size = sxx_cultivator
				NOT = { has_ship_flag = sxx_bombard_cooldown }
			}
			event_target:sxx_pool_planet = {
				random_owned_pop = {
					limit = {
						has_pop_flag = sxx_cultivator_of@prevprev
					}
					from = {
						create_army = {
							owner = root.controller
							type = assault_army
							species = prev.species
						}
						last_created_army = {
							set_army_flag = sxx_ship_army_of@from
						}
						root.controller = { save_event_target_as = sxx_ship_army_country }
						planet_event = { id = sxx_event.31 days = 2 }
					}
				}
			}
			set_timed_ship_flag = {
				flag = sxx_bombard_cooldown
				days = 90
			}
		}
	}
}

# 删除轨道轰炸陆军
planet_event = {
	id = sxx_event.31
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				has_ground_combat = yes
			}
			planet_event = { id = sxx_event.31 days = 2 }
		}
		else = {
			event_target:sxx_ship_army_country = {
				every_owned_army = {
					limit = {
						has_army_flag = sxx_ship_army_of@root
					}
					remove_army = yes
				}
			}
		}
	}
}

# 召集人口
planet_event = {
	id = sxx_event.50
	title = sxx_event.50.name
	desc = sxx_event.50.desc
	picture = GFX_evt_throne_room
	location = root

	is_triggered_only = yes

	option = {
		name = sxx_event.50.1
		trigger = {
			owner = { is_sxx_lianqi_country = yes }
		}
		sxx_call_pop_effect = { STATE = lianqi }
	}
	option = {
		name = sxx_event.50.2
		trigger = {
			owner = { is_sxx_zhuji_country = yes }
		}
		sxx_call_pop_effect = { STATE = zhuji }
	}
	option = {
		name = sxx_event.50.3
		trigger = {
			owner = { is_sxx_jindan_country = yes }
		}
		sxx_call_pop_effect = { STATE = jindan }
	}
	option = {
		name = sxx_event.50.4
		trigger = {
			owner = { is_sxx_yuanying_country = yes }
		}
		sxx_call_pop_effect = { STATE = yuanying }
	}
	option = {
		name = sxx_event.50.5
		trigger = {
			owner = { is_sxx_huashen_country = yes }
		}
		sxx_call_pop_effect = { STATE = huashen }
	}
	option = {
		name = sxx_event.50.6
		trigger = {
			owner = { is_sxx_lianxu_country = yes }
		}
		sxx_call_pop_effect = { STATE = lianxu }
	}
	option = {
		name = sxx_event.50.7
		trigger = {
			owner = { is_sxx_heti_country = yes }
		}
		sxx_call_pop_effect = { STATE = heti }
	}
	option = {
		name = sxx_event.50.8
		trigger = {
			owner = { is_sxx_dacheng_country = yes }
		}
		sxx_call_pop_effect = { STATE = dacheng }
	}
	option = {
		name = sxx_event.50.9
		trigger = {
			owner = { is_sxx_dujie_country = yes }
		}
		sxx_call_pop_effect = { STATE = dujie }
	}
	option = {
		name = sxx_event.50.a
		sxx_call_pop_effect = { TRIGGER = is_unemployed }
	}
	option = {
		name = sxx_event.50.b
		sxx_call_pop_effect = { JOB = sxx_other_cultivator }
	}
	option = {
		name = sxx_event.50.c
		sxx_call_pop_effect = { JOB = sxx_factotum_disciple }
	}
	option = {
		name = sxx_event.50.d
		sxx_call_pop_effect = { JOB = sxx_supreme_elder }
	}
	option = {
		name = sxx_event.50.close
	}
}

# 每月更新修炼信息
country_event = {
	id = sxx_event.100
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_edict = sxx_show_pop_cultivation_data
	}

	immediate = {
		every_owned_pop = {
			remove_modifier = sxx_pop_speed_show
			remove_modifier = sxx_pop_xp_show
			remove_modifier = sxx_pop_xp_max_show
			if = {
				limit = {
					is_variable_set = sxx_pop_state
					is_sxx_fairy_pop = no
				}
				if = {
					limit = {
						is_sxx_cultivable_cultivator = yes
					}
					add_modifier = {
						modifier = sxx_pop_speed_show
						multiplier = value:sxx_pop_xp_add_total
						days = 30
					}
				}
				add_modifier = {
					modifier = sxx_pop_xp_show
					multiplier = sxx_pop_xp
					days = 30
				}
				add_modifier = {
					modifier = sxx_pop_xp_max_show
					multiplier = value:sxx_pop_xp_max
					days = 30
				}
				switch = {
					trigger = has_pop_flag
					sxx_lianqi = { sxx_add_pop_little_state_modidier_effect = { STATE = 1 } }
					sxx_zhuji = { sxx_add_pop_little_state_modidier_effect = { STATE = 2 } }
					sxx_jindan = { sxx_add_pop_little_state_modidier_effect = { STATE = 3 } }
					sxx_yuanying = { sxx_add_pop_little_state_modidier_effect = { STATE = 4 } }
					sxx_huashen = { sxx_add_pop_little_state_modidier_effect = { STATE = 5 } }
					sxx_lianxu = { sxx_add_pop_little_state_modidier_effect = { STATE = 6 } }
					sxx_heti = { sxx_add_pop_little_state_modidier_effect = { STATE = 7 } }
					sxx_dacheng = { sxx_add_pop_little_state_modidier_effect = { STATE = 8 } }
					sxx_dujie = { sxx_add_pop_little_state_modidier_effect = { STATE = 9 } }
				}
			}
			else_if = {
				limit = {
					is_sxx_fairy_pop = yes
				}
				add_modifier = {
					modifier = sxx_pop_speed_show
					multiplier = value:sxx_fairy_pop_xp_add_total
					days = 30
				}
				add_modifier = {
					modifier = sxx_pop_xp_show
					multiplier = sxx_fairy_pop_xp
					days = 30
				}
				add_modifier = {
					modifier = sxx_pop_xp_max_show
					multiplier = value:sxx_fairy_pop_xp_max
					days = 30
				}
				switch = {
					trigger = has_pop_flag
					sxx_zhenxian = { sxx_add_pop_little_state_modidier_effect = { STATE = 10 } }
					sxx_xianwang = { sxx_add_pop_little_state_modidier_effect = { STATE = 11 } }
					sxx_xiandi = { sxx_add_pop_little_state_modidier_effect = { STATE = 12 } }
				}
			}
		}
	}
}

# 转政体前
country_event = {
	id = sxx_event.105
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_authority = auth_sxx_sect
	}

	immediate = {
		set_timed_country_flag = {
			flag = is_auth_sxx_sect
			days = 7
		}
	}
}

# 转政体后
country_event = {
	id = sxx_event.106
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_country_flag = is_auth_sxx_sect
	}

	immediate = {
		change_government = {
			authority = auth_sxx_sect
			cooldown = no
			remove_invalid_civics = yes
		}
	}
}

# 每月阵法更新
event = {
	id = sxx_event.110
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		every_country = {
			if = {
				limit = {
					is_sxx_sect = yes
				}
				every_owned_planet = {
					switch = {
						trigger = has_modifier
						sxx_array_juling = {
							sxx_planet_remove_all_array = yes
							add_modifier = {
								modifier = sxx_array_juling
								mult = value:sxx_array_stength_value
							}
						}
						sxx_array_huzong = {
							sxx_planet_remove_all_array = yes
							add_modifier = {
								modifier = sxx_array_huzong
								mult = value:sxx_array_stength_value
							}
						}
						sxx_array_yangchun = {
							sxx_planet_remove_all_array = yes
							add_modifier = {
								modifier = sxx_array_yangchun
								mult = value:sxx_array_stength_value
							}
						}
						sxx_array_ningshen = {
							sxx_planet_remove_all_array = yes
							add_modifier = {
								modifier = sxx_array_ningshen
								mult = value:sxx_array_stength_value
							}
						}
						sxx_array_dihuo = {
							sxx_planet_remove_all_array = yes
							add_modifier = {
								modifier = sxx_array_dihuo
								mult = value:sxx_array_stength_value
							}
						}
					}
				}
			}
			else = {
				every_owned_planet = {
					sxx_planet_remove_all_array = yes
				}
			}
		}
	}
}

# 布阵
planet_event = {
	id = sxx_event.120
	title = sxx_event.120.name
	desc = sxx_event.120.desc
	picture = GFX_evt_clocks
	location = root

	is_triggered_only = yes

	immediate = {
		set_timed_planet_flag = {
			flag = sxx_planet_array_event_ongoing
			days = 1800
		}
	}

	after = {
		hidden_effect = {
			remove_planet_flag = sxx_planet_array_event_ongoing
		}
	}

	option = {
		name = sxx_event.120.a
		trigger = {
			owner = {
				has_technology = tech_sxx_planetary_array
			}
		}
		allow = {
			any_owned_pop = { has_job = sxx_array_master }
			owner = {
				resource_stockpile_compare = { resource = sxx_stones value >= 1000 }
				resource_stockpile_compare = { resource = consumer_goods value >= 500 }
			}
			NOT = { has_modifier = sxx_array_juling }
		}
		hidden_effect = {
			sxx_planet_remove_all_array = yes
		}
		add_modifier = {
			modifier = sxx_array_juling
			mult = value:sxx_array_stength_value
		}
		owner = {
			add_resource = {
				sxx_stones = -1000
				consumer_goods = -500
			}
		}
		ai_chance = {
			factor = 100
		}
	}
	option = {
		name = sxx_event.120.b
		trigger = {
			owner = {
				has_technology = tech_sxx_array_huzong
			}
		}
		allow = {
			any_owned_pop = { has_job = sxx_array_master }
			owner = {
				resource_stockpile_compare = { resource = sxx_stones value >= 3000 }
				resource_stockpile_compare = { resource = consumer_goods value >= 1500 }
			}
			NOT = { has_modifier = sxx_array_huzong }
		}
		hidden_effect = {
			sxx_planet_remove_all_array = yes
		}
		add_modifier = {
			modifier = sxx_array_huzong
			mult = value:sxx_array_stength_value
		}
		owner = {
			add_resource = {
				sxx_stones = -3000
				consumer_goods = -1500
			}
		}
	}
	option = {
		name = sxx_event.120.c
		trigger = {
			owner = {
				has_technology = tech_sxx_array_yangchun
			}
		}
		allow = {
			any_owned_pop = { has_job = sxx_array_master }
			owner = {
				resource_stockpile_compare = { resource = sxx_stones value >= 10000 }
				resource_stockpile_compare = { resource = consumer_goods value >= 5000 }
			}
			NOT = { has_modifier = sxx_array_yangchun }
		}
		hidden_effect = {
			sxx_planet_remove_all_array = yes
		}
		add_modifier = {
			modifier = sxx_array_yangchun
			mult = value:sxx_array_stength_value
		}
		owner = {
			add_resource = {
				sxx_stones = -10000
				consumer_goods = -5000
			}
		}
	}
	option = {
		name = sxx_event.120.d
		trigger = {
			owner = {
				has_technology = tech_sxx_array_ningshen
			}
		}
		allow = {
			any_owned_pop = { has_job = sxx_array_master }
			owner = {
				resource_stockpile_compare = { resource = sxx_stones value >= 3000 }
				resource_stockpile_compare = { resource = consumer_goods value >= 1500 }
			}
			NOT = { has_modifier = sxx_array_ningshen }
		}
		hidden_effect = {
			sxx_planet_remove_all_array = yes
		}
		add_modifier = {
			modifier = sxx_array_ningshen
			mult = value:sxx_array_stength_value
		}
		owner = {
			add_resource = {
				sxx_stones = -3000
				consumer_goods = -1500
			}
		}
	}
	option = {
		name = sxx_event.120.e
		trigger = {
			owner = {
				has_technology = tech_sxx_array_dihuo
			}
		}
		allow = {
			any_owned_pop = { has_job = sxx_array_master }
			owner = {
				resource_stockpile_compare = { resource = sxx_stones value >= 3000 }
				resource_stockpile_compare = { resource = consumer_goods value >= 1500 }
			}
			NOT = { has_modifier = sxx_array_dihuo }
		}
		hidden_effect = {
			sxx_planet_remove_all_array = yes
		}
		add_modifier = {
			modifier = sxx_array_dihuo
			mult = value:sxx_array_stength_value
		}
		owner = {
			add_resource = {
				sxx_stones = -3000
				consumer_goods = -1500
			}
		}
	}
	option = {
		name = sxx_event.120.close
		ai_chance = {
			factor = 10
		}
	}
}

# 每年添加潜力耗尽pop modifier（防止奴隶贩卖等导致的修正丢失） & 补充修炼记录
event = {
	id = sxx_event.125
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			limit = {
				is_sxx_sect = yes
			}
			every_owned_pop = {
				limit = {
					is_sxx_potential_depletion = yes
				}
				add_modifier = { modifier = sxx_pop_potential_depletion }
			}

			if = {
				limit = {
					NOT = { has_event_chain = sxx_cultivation_data_chain }
				}
				begin_event_chain = {
					event_chain = sxx_cultivation_data_chain
					target = ROOT
				}
			}
		}
	}
}

# 大殿等级变动时傀儡组装清零
planet_event = {
	id = sxx_event.130
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		OR = {
			last_building_changed = building_sxx_zongmen_1
			last_building_changed = building_sxx_zongmen_2
			last_building_changed = building_sxx_zongmen_3
			last_building_changed = building_sxx_zongmen_4
			last_building_changed = building_sxx_zongmen_5
			last_building_changed = building_sxx_zongmen_6
			last_building_changed = building_sxx_zongmen_7
			last_building_changed = building_sxx_zongmen_8
			last_building_changed = building_sxx_zongmen_9
			last_building_changed = building_sxx_zongmen_10
		}
	}

	immediate = {
		set_variable = { which = sxx_kuilei_assembly_count value = 0 }
	}
}

# 每月傀儡组装
country_event = {
	id = sxx_event.131
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_valid_civic = civic_sxx_kuilei
	}

	immediate = {
		add_sxx_kuilei_species = yes

		random_galaxy_species = {
			limit = {
				has_species_flag = mechanical_species@root
			}
			random_galaxy_species = {
				limit = {
					is_same_species = prev
				}
				weights = {
					base = 1
					modifier = {
						add = 1
						has_trait = trait_sxx_kuilei
					}
					modifier = {
						factor = 10
						has_trait = trait_sxx_template
					}
				}
				save_event_target_as = sxx_kuilei_species
			}
		}
		every_owned_planet = {
			limit = {
				is_sxx_lianqi_planet = yes
			}

			if = {
				limit = {
					NOT = { has_modifier = sxx_kuilei_upgrading_modifier }
				}
				change_variable = {
					which = sxx_kuilei_assembly_count
					value = value:sxx_planet_kuilei_assembly_value
				}
				while = {
					count = 20
					if = {
						limit = {
							check_variable = { which = sxx_kuilei_assembly_count value >= 100 }
						}
						subtract_variable = { which = sxx_kuilei_assembly_count value = 100 }
						create_pop = {
							species = event_target:sxx_kuilei_species
							effect = {
								sxx_remove_xiuxian_trait = yes
								modify_species = {
									species = this
									add_trait = trait_sxx_kuilei
									remove_trait = trait_sxx_template
								}
								prev = {
									switch = {
										trigger = has_active_building
										building_sxx_zongmen_1 = { prev = { set_pop_flag = sxx_lianqi set_variable = { which = sxx_pop_state value = 1 } modify_species = { species = this add_trait = trait_sxx_lianqi } } }
										building_sxx_zongmen_2 = { prev = { set_pop_flag = sxx_zhuji set_variable = { which = sxx_pop_state value = 2 } modify_species = { species = this add_trait = trait_sxx_zhuji } } }
										building_sxx_zongmen_3 = { prev = { set_pop_flag = sxx_jindan set_variable = { which = sxx_pop_state value = 3 } modify_species = { species = this add_trait = trait_sxx_jindan } } }
										building_sxx_zongmen_4 = { prev = { set_pop_flag = sxx_yuanying set_variable = { which = sxx_pop_state value = 4 } modify_species = { species = this add_trait = trait_sxx_yuanying } } }
										building_sxx_zongmen_5 = { prev = { set_pop_flag = sxx_huashen set_variable = { which = sxx_pop_state value = 5 } modify_species = { species = this add_trait = trait_sxx_huashen } } }
										building_sxx_zongmen_6 = { prev = { set_pop_flag = sxx_lianxu set_variable = { which = sxx_pop_state value = 6 } modify_species = { species = this add_trait = trait_sxx_lianxu } } }
										building_sxx_zongmen_7 = { prev = { set_pop_flag = sxx_heti set_variable = { which = sxx_pop_state value = 7 } modify_species = { species = this add_trait = trait_sxx_heti } } }
										building_sxx_zongmen_8 = { prev = { set_pop_flag = sxx_dacheng set_variable = { which = sxx_pop_state value = 8 } modify_species = { species = this add_trait = trait_sxx_dacheng } } }
										building_sxx_zongmen_9 = { prev = { set_pop_flag = sxx_dujie set_variable = { which = sxx_pop_state value = 9 } modify_species = { species = this add_trait = trait_sxx_dujie } } }
										building_sxx_zongmen_10 = { prev = { set_pop_flag = sxx_dujie set_variable = { which = sxx_pop_state value = 9 } modify_species = { species = this add_trait = trait_sxx_dujie } } }
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# 添加傀儡宗国策时获得组装模板
country_event = {
	id = sxx_event.132
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_valid_civic = civic_sxx_kuilei
	}

	immediate = {
		add_sxx_kuilei_species = yes
	}
}

# 融合傀儡
planet_event = {
	id = sxx_event.133
	title = sxx_event.133.name
	desc = sxx_event.133.desc
	picture = GFX_evt_cybernetics
	location = root

	is_triggered_only = yes

	trigger = {
		owner = { has_valid_civic = civic_sxx_kuilei }
	}

	option = {
		name = sxx_event.133.1
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = lianqi
		}
	}
	option = {
		name = sxx_event.133.2
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = zhuji
		}
	}
	option = {
		name = sxx_event.133.3
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = jindan
		}
	}
	option = {
		name = sxx_event.133.4
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = yuanying
		}
	}
	option = {
		name = sxx_event.133.5
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = huashen
		}
	}
	option = {
		name = sxx_event.133.6
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = lianxu
		}
	}
	option = {
		name = sxx_event.133.7
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = heti
		}
	}
	option = {
		name = sxx_event.133.8
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = dacheng
		}
	}
	option = {
		name = sxx_event.133.9
		inline_script = {
			script = sxx_kuilei_fusion
			STATE = dujie
		}
	}
	option = {
		name = sxx_event.133.auto
		custom_tooltip = sxx_event.133.auto.tooltip
		hidden_effect = {
			planet_event = { id = sxx_event.134 }
		}
	}
	option = {
		name = sxx_event.133.close
	}
}

# 自动融合傀儡
planet_event = {
	id = sxx_event.134
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		owner = { has_valid_civic = civic_sxx_kuilei }
	}

	immediate = {
		if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = dujie }
			}
			sxx_kuilei_fusion_effect = { STATE = dujie }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = dacheng }
			}
			sxx_kuilei_fusion_effect = { STATE = dacheng }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = heti }
			}
			sxx_kuilei_fusion_effect = { STATE = heti }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = lianxu }
			}
			sxx_kuilei_fusion_effect = { STATE = lianxu }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = huashen }
			}
			sxx_kuilei_fusion_effect = { STATE = huashen }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = yuanying }
			}
			sxx_kuilei_fusion_effect = { STATE = yuanying }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = jindan }
			}
			sxx_kuilei_fusion_effect = { STATE = jindan }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = zhuji }
			}
			sxx_kuilei_fusion_effect = { STATE = zhuji }
			planet_event = { id = sxx_event.134 days = 1 }
		}
		else_if = {
			limit = {
				sxx_kuilei_fusion_trigger = { STATE = lianqi }
			}
			sxx_kuilei_fusion_effect = { STATE = lianqi }
			planet_event = { id = sxx_event.134 days = 1 }
		}
	}
}

# 傀儡之心弹窗
country_event = {
	id = sxx_event.135
	title = sxx_event.135.name
	desc = sxx_event.135.desc
	picture = GFX_evt_machine_sapience
	show_sound = event_the_great_awakening

	is_triggered_only = yes

	option = {
		name = sxx_event.135.a
	}
}

# 血丹师每月消耗血煞之力 & 无血冥碑清空血煞之力
country_event = {
	id = sxx_event.140
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		has_valid_civic = civic_sxx_evil_way
		has_technology = tech_secrets_sxx_precursor4
	}

	immediate = {
		every_owned_planet = {
			if = {
				limit = {
					has_active_building = building_sxx_xuemingbei
				}
				subtract_variable = {
					which = sxx_evil_break_count
					value = value:sxx_xiuluo_pills_maker_xuesha_upkeep_value
				}
				if = {
					limit = {
						check_variable = { which = sxx_evil_break_count value <= 0 }
					}
					set_variable = { which = sxx_evil_break_count value = 0 }
				}
			}
			else = {
				set_variable = { which = sxx_evil_break_count value = 0 }
			}
		}
	}
}

# 血祭UI
planet_event = {
	id = sxx_event.145
	is_triggered_only = yes
	diplomatic = yes
	custom_gui = sxx_xueji_ui

	option = {
		name = OK
	}
}

# on_released_as_vassal
# 被释放的附庸继承宗主宗门等级 & 添加宗门理念 & 继承科技
country_event = {
	id = sxx_event.150
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = { is_sxx_sect = yes }
		#is_sxx_sect = yes
	}

	immediate = {
		country_event = { id = sxx_event.151 days = 1 }
	}
}

# 被释放的附庸继承宗主宗门等级 & 添加宗门理念 & 继承科技
country_event = {
	id = sxx_event.151
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				is_sxx_sect = no
			}
			force_add_civic = civic_sxx_sect
		}

		if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_dujie
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_dujie_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_dacheng
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_dacheng_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_heti
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_heti_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_lianxu
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_lianxu_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_huashen
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_huashen_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_yuanying
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_yuanying_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_jindan
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_jindan_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_zhuji
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_zhuji_country }
		}
		else_if = {
			limit = {
				any_owned_pop = {
					has_pop_flag = sxx_lianqi
					is_sxx_cultivable_cultivator = yes
				}
			}
			add_modifier = { modifier = sxx_lianqi_country }
		}

		copy_techs_from = { target = fromfrom }
	}
}

# 领袖生成时调整为凡人 & 去灵根 & 改羽化 (改rule了，暂且停用）
country_event = {
	id = sxx_event.200

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		always = no
	}

	immediate = {
		from = {
			if = {
				limit = {
					species = { has_trait = trait_sxx_yuhua }
				}
				root = {
					random_owned_species = {
						weights = {
							base = 1
							modifier = {
								factor = 100
								has_citizenship_type = {
									type = citizenship_full
									country = root
								}
							}
							modifier = {
								factor = 30
								has_citizenship_type = {
									type = citizenship_limited
									country = root
								}
							}
							modifier = {
								add = 10
								has_citizenship_type = {
									type = citizenship_slavery
									country = root
								}
							}
						}
						prevprev = {
							change_species = prev
							change_leader_portrait = species
						}
					}
				}
			}
			if = {
				limit = {
					species = { has_trait = trait_sxx_linggen }
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_linggen
				}
			}
			sxx_remove_xiuxian_trait = yes
		}
		every_pool_leader = {
			if = {
				limit = {
					species = { has_trait = trait_sxx_yuhua }
				}
				root = {
					random_owned_species = {
						weights = {
							base = 1
							modifier = {
								factor = 100
								has_citizenship_type = {
									type = citizenship_full
									country = root
								}
							}
							modifier = {
								factor = 30
								has_citizenship_type = {
									type = citizenship_limited
									country = root
								}
							}
							modifier = {
								add = 10
								has_citizenship_type = {
									type = citizenship_slavery
									country = root
								}
							}
						}
						prevprev = {
							change_species = prev
							change_leader_portrait = species
						}
					}
				}
			}
			if = {
				limit = {
					species = { has_trait = trait_sxx_linggen }
				}
				modify_species = {
					species = this
					remove_trait = trait_sxx_linggen
				}
			}
			sxx_remove_xiuxian_trait = yes
		}
	}
}

# 修士物种调整至对应模板
country_event = {
	id = sxx_event.210

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		from = {
			has_trait = trait_sxx_template
		}
	}

	immediate = {
		every_owned_pop = {
			limit = {
				is_same_species = from
			}
			if = {
				limit = {
					has_trait = trait_sxx_linggen
				}
				set_pop_flag = sxx_linggen_pop
			}
			if = {
				limit = {
					has_trait = trait_zombie
				}
				set_pop_flag = sxx_zombie_pop
			}
			
			switch = {
				trigger = has_pop_flag
				sxx_lianqi = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_lianqi
					}
				}
				sxx_zhuji = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_zhuji
					}
				}
				sxx_jindan = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_jindan
					}
				}
				sxx_yuanying = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_yuanying
					}
				}
				sxx_huashen = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_huashen
					}
				}
				sxx_lianxu = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_lianxu
					}
				}
				sxx_heti = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_heti
					}
				}
				sxx_dacheng = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_dacheng
					}
				}
				sxx_dujie = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_dujie
					}
				}
				sxx_zhenxian = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_zhenxian
					}
				}
				sxx_xianwang = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_xianwang
					}
				}
				sxx_xiandi = {
					change_species = from
					sxx_remove_xiuxian_trait = yes
					modify_species = {
						species = this
						add_trait = trait_sxx_xiandi
					}
				}
			}

			if = {
				limit = {
					has_trait = trait_mechanical
				}
				if = {
					limit = {
						is_variable_set = sxx_pop_state
						NOT = { has_trait = trait_sxx_kuilei }
					}
					modify_species = {
						species = this
						add_trait = trait_sxx_kuilei
					}
				}
				else_if = {
					limit = {
						NOT = { is_variable_set = sxx_pop_state }
						has_trait = trait_sxx_kuilei
					}
					modify_species = {
						species = this
						remove_trait = trait_sxx_kuilei
					}
				}
			}
			if = {
				limit = {
					has_pop_flag = sxx_linggen_pop
				}
				modify_species = {
					species = this
					add_trait = trait_sxx_linggen
				}
				remove_pop_flag = sxx_linggen_pop
			}
			else = {
				modify_species = {
					species = this
					remove_trait = trait_sxx_linggen
				}
			}

			if = {
				limit = {
					has_pop_flag = sxx_zombie_pop
				}
				modify_species = {
					species = this
					add_trait = trait_zombie
				}
				remove_pop_flag = sxx_zombie_pop
			}
			else = {
				modify_species = {
					species = this
					remove_trait = trait_zombie
				}
			}

			modify_species = {
				species = this
				remove_trait = trait_sxx_template
			}
		}
		if = {
			limit = {
				has_country_flag = add_trait_sxx_potential_depletion
			}
			every_owned_pop = {
				if = {
					limit = {
						is_sxx_potential_depletion = yes
					}
					if = {
						limit = {
							NOT = { has_trait = trait_sxx_potential_depletion }
						}
						modify_species = {
							species = this
							add_trait = trait_sxx_potential_depletion
						}
					}
				}
				else = {
					if = {
						limit = {
							has_trait = trait_sxx_potential_depletion
						}
						modify_species = {
							species = this
							remove_trait = trait_sxx_potential_depletion
						}
					}
				}
			}
		}
	}
}

# 炼星成丹
planet_event = {
	id = sxx_event.250
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		planet_size > 1
	}

	immediate = {
		solar_system.space_owner = {
			add_resource = {
				sxx_pills = 1000
			}
		}
		planet_event = { id = sxx_event.250 days = 30 }
	}
}

# 劫云消散判定
system_event = {
	id = sxx_event.300
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				any_system_colony = {
					owner = {
						OR = {
							has_ascension_perk = ap_sxx_ascend_to_fairyland
							has_ascension_perk = ap_sxx_build_heaven
						}
					}
					any_owned_pop = {
						has_pop_flag = sxx_dujie
						check_variable = { which = sxx_pop_xp value >= value:sxx_pop_xp_max }
					}
				}
			}
			if = {
				limit = {
					NOT = { any_system_ambient_object = { has_ambient_object_flag = sxx_jieyun_object } }
				}
				star = {
					create_ambient_object = {
						type = "space_storm_1"
						location = this
					}
					last_created_ambient_object = {
						set_ambient_object_flag = sxx_jieyun_object
						set_location = {
							target = prev
							distance = 0
							angle = random
						}
					}
				}
			}
			system_event = { id = sxx_event.300 days = 30 }
		}
		else = {
			sxx_jieyun_end = yes
		}
	}
}

################################## 荒古禁域 ####################################

# 进入必死
fleet_event = {
	id = sxx_event.500
	hide_window = yes

	is_triggered_only = yes

	trigger = {
		from = { has_star_flag = sxx_forbidden_area }
		owner = { NOT = { is_country_type = sxx_hostile } }
	}

	immediate = {
		destroy_fleet = this
	}
}

# 埋骨地debug
country_event = {
	id = sxx_event.505
	hide_window = yes

	mean_time_to_happen = {
		months = 1
		#years = 1
	}

	trigger = {
		is_country_type = sxx_memory_pool
		event_target:sxx_pool_planet = {
			OR = {
				NOT = { exists = owner }
				owner = { NOT = { is_country_type = sxx_memory_pool } }
			}
		}
	}

	immediate = {
		if = {
			limit = {
				event_target:sxx_pool_planet = {
					is_planet_class = pc_shattered
				}
			}
			set_update_modifiers_batch = begin
			every_system = { destroy_star_system = yes }
			set_update_modifiers_batch = end
		}
		if = {
			limit = {
				event_target:sxx_pool_planet = {
					exists = owner
				}
			}
			switch = {
				trigger = has_global_flag
				sxx_warning_1 = { remove_global_flag = sxx_warning_1 set_global_flag = sxx_warning_2 }
				sxx_warning_2 = { remove_global_flag = sxx_warning_2 set_global_flag = sxx_warning_3 }
				sxx_warning_3 = { remove_global_flag = sxx_warning_3 set_global_flag = sxx_warning_over_3 event_target:sxx_pool_planet.owner = { destroy_country = yes } }
				sxx_warning_over_3 = { event_target:sxx_pool_planet.owner = { destroy_country = yes } }
				default = { set_global_flag = sxx_warning_1 }
			}
			every_country = {
				limit = {
					is_ai = no
				}
				country_event = { id = sxx_event.515 }
			}
		}
		event_target:sxx_pool_planet = {
			if = {
				limit = {
					NOT = { is_planet_class = pc_sxx_blessed_spot }
				}
				change_pc = pc_sxx_blessed_spot
			}
			set_owner = root
			create_pop = { species = owner_main_species }
			last_created_pop = {
				set_pop_flag = sxx_pool_pop_alive
			}
		}
		if = {
			limit = {
				OR = {
					NOT = { exists = event_target:sxx_hostile_ship_fairy_5 }
					event_target:sxx_hostile_ship_fairy_5 = {
						owner = { NOT = { is_same_value = event_target:sxx_hostile_country } }
					}
				}
			}
			event_target:sxx_hostile_country = {
				event_target:sxx_pool_star = {
					create_sxx_fairy_ship_5 = yes
					last_created_ship = {
						save_global_event_target_as = sxx_hostile_ship_fairy_5
						ship_event = { id = sxx_event.520 days = 30 random = 10 }
					}
				}
			}
		}
	}
}

# 每5年一次，埋骨地亡魂大清洗
event = {
	id = sxx_event.510
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		event_target:sxx_pool_country = {
			country_event = { id = sxx_event.505 }
		}
		every_galaxy_fleet = {
			every_owned_ship = {
				limit = {
					is_ship_size = sxx_cultivator
				}
				event_target:sxx_pool_planet = {
					random_owned_pop = {
						limit = {
							has_pop_flag = sxx_cultivator_of@prevprev
						}
						set_timed_pop_flag = {
							flag = sxx_pool_pop_alive
							days = 7
						}
					}
				}
			}
		}
		event_target:sxx_pool_planet = {
			set_update_modifiers_batch = begin
			every_owned_pop = {
				limit = {
					NOT = { has_pop_flag = sxx_pool_pop_alive }
				}
				kill_pop = yes
			}
			set_update_modifiers_batch = end
			solar_system = {
				isolate_system = yes
			}
		}
	}
}

# 埋骨地警告
country_event = {
	id = sxx_event.515
	title = TRANSMISSION
	desc = {
		text = sxx_event.515.desc_1
		trigger = {
			has_global_flag = sxx_warning_1
		}
	}
	desc = {
		text = sxx_event.515.desc_2
		trigger = {
			has_global_flag = sxx_warning_2
		}
	}
	desc = {
		text = sxx_event.515.desc_3
		trigger = {
			has_global_flag = sxx_warning_3
		}
	}
	desc = {
		text = sxx_event.515.desc_4
		trigger = {
			has_global_flag = sxx_warning_over_3
		}
	}

	is_triggered_only = yes

	diplomatic = yes

	picture_event_data = {
		room = no_video_feed_room
	}

	trigger = {
		NOT = { has_global_flag = sxx_no_more_warning }
	}

	immediate = {
		if = {
			limit = {
				has_global_flag = sxx_warning_over_3
			}
			set_global_flag = sxx_no_more_warning
		}
	}

	option = {
		name = sxx_event.515.a
	}
}

# 堕落化身效果
ship_event = {
	id = sxx_event.520
	hide_window = yes

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				fleet.owner = { is_same_value = event_target:sxx_hostile_country }
				fleet.controller = { is_same_value = event_target:sxx_hostile_country }
			}
		}
		else = {
			fleet = {
				set_controller = event_target:sxx_hostile_country
				set_owner = event_target:sxx_hostile_country
			}
		}
		ship_event = { id = sxx_event.520 days = 30 random = 10 }
	}
}

##################################### 修炼指南 #########################################

country_event = {
	id = sxx_event.2000
	title = sxx_event.2000.name
	desc = sxx_event.2000.desc
	picture = GFX_evt_sxx_blessed_spot

	is_triggered_only = yes

	option = {
		name = sxx_next_page
		hidden_effect = {
			country_event = { id = sxx_event.2001 }
		}
	}
	option = {
		name = sxx_close
	}
}

country_event = {
	id = sxx_event.2001
	title = sxx_event.2000.name
	desc = sxx_event.2001.desc
	picture = GFX_evt_sxx_blessed_spot

	is_triggered_only = yes

	option = {
		name = sxx_previous_page
		hidden_effect = {
			country_event = { id = sxx_event.2000 }
		}
	}
	option = {
		name = sxx_next_page
		hidden_effect = {
			country_event = { id = sxx_event.2002 }
		}
	}
	option = {
		name = sxx_close
	}
}

country_event = {
	id = sxx_event.2002
	title = sxx_event.2000.name
	desc = sxx_event.2002.desc
	picture = GFX_evt_sxx_blessed_spot

	is_triggered_only = yes

	option = {
		name = sxx_previous_page
		hidden_effect = {
			country_event = { id = sxx_event.2001 }
		}
	}
	option = {
		name = sxx_next_page
		hidden_effect = {
			country_event = { id = sxx_event.2003 }
		}
	}
	option = {
		name = sxx_close
	}
}

country_event = {
	id = sxx_event.2003
	title = sxx_event.2000.name
	desc = sxx_event.2003.desc
	picture = GFX_evt_sxx_blessed_spot

	is_triggered_only = yes

	option = {
		name = sxx_previous_page
		hidden_effect = {
			country_event = { id = sxx_event.2002 }
		}
	}
	option = {
		name = sxx_next_page
		hidden_effect = {
			country_event = { id = sxx_event.2004 }
		}
	}
	option = {
		name = sxx_close
	}
}

country_event = {
	id = sxx_event.2004
	title = sxx_event.2000.name
	desc = sxx_event.2004.desc
	picture = GFX_evt_sxx_blessed_spot

	is_triggered_only = yes

	option = {
		name = sxx_previous_page
		hidden_effect = {
			country_event = { id = sxx_event.2003 }
		}
	}
	option = {
		name = sxx_next_page
		hidden_effect = {
			country_event = { id = sxx_event.2005 }
		}
	}
	option = {
		name = sxx_close
	}
}

country_event = {
	id = sxx_event.2005
	title = sxx_event.2000.name
	desc = sxx_event.2005.desc
	picture = GFX_evt_sxx_blessed_spot

	is_triggered_only = yes

	option = {
		name = sxx_previous_page
		hidden_effect = {
			country_event = { id = sxx_event.2004 }
		}
	}
	option = {
		name = sxx_close
	}
}

country_event = {
	id = sxx_event.2010
	title = sxx_event.2010.name
	desc = sxx_event.2010.desc
	picture = GFX_evt_sxx_blessed_spot

	is_triggered_only = yes
	
	option = {
		name = sxx_close
	}
}